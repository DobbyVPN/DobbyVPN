include "#!./gradlew -q printConveyorConfig"

app.version = 1.1
app.fsname = dobby-vpn
app.license = "Apache-2.0"

app.icons = "logos/logo.png"

app.vcs-url = github.com/DobbyVPN/DobbyVPN


// The app on windows will always run as an administrator or will prompt for elevated privileges to this level.
app.windows.manifests.exe.requested-execution-level = requireAdministrator
app.windows.manifests.msix.capabilities += "rescap:allowElevation"

// We need special skiko for each platform.
// More information: https://conveyor.hydraulic.dev/16.0/configs/jvm/#proguard-obfuscation
gradle-cache = ${env.HOME}/.gradle    # Note: UNIX specific config!

app {
    # Import all the obfuscated JARs, except the JAR that contains the platform native graphics code.
    inputs = [{
      from = composeApp/build/compose/tmp/main-release/proguard
      remap = [
          "**"
          "-skiko-awt-runtime-*.jar"
      ]
    }]

    # Put the dropped JAR back with the right version for each platform.
    linux.amd64.inputs = ${app.inputs} [ ${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-linux-x64/0.7.34/60f05c42be49b3ba7fc98173f4f6e80c3b9de4fd/skiko-awt-runtime-linux-x64-0.7.34.jar ]
    mac.aarch64.inputs = ${app.inputs} [ ${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-macos-arm64/0.7.34/3f7fe53a3c9c0c96dbe07c22ba4a38234ff13487/skiko-awt-runtime-macos-arm64-0.7.34.jar ]
    mac.amd64.inputs = ${app.inputs} [ ${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-macos-x64/0.7.34/466356827dcdb20c4202fa280ff95c41b215313/skiko-awt-runtime-macos-x64-0.7.34.jar ]
    windows.amd64.inputs = ${app.inputs} [ ${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-windows-x64/0.7.34/1a302b2d58bdf6627446a94098672ab982b90fd0/skiko-awt-runtime-windows-x64-0.7.34.jar ]
}

// Add dll and all usefull files
app.windows.inputs += libs/lib_windows.dll
app.linux.inputs += libs/lib_linux.so
app.mac.aarch64.inputs += libs/liboutline_arm64.dylib
// Add minimum macOS version because liboutline_arm64.dylib need 15+ macOS
app.mac.aarch64.info-plist.LSMinimumSystemVersion = 15.0
app.mac.inputs += libs/lib_mac.dylib
// Add minimum macOS version because liboutline_x86_64.dylib need 11+ macOS
app.mac.amd64.info-plist.LSMinimumSystemVersion = 11.0

// Add device fo windows (use it )
app.windows.inputs += {
  from = tap-device/device/amd64
  to = tap-windows6
}

// Can turn on console for debug
app.windows.console = true

conveyor.compatibility-level = 19